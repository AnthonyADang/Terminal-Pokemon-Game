
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

poke327.c,1974
#define malloc(14,226
typedef struct path 20,370
  heap_node_t *hn;hn21,392
  uint8_t pos[pos22,411
  uint8_t from[from23,429
  int32_t cost;24,448
} path_t;25,464
typedef enum dim 27,475
  dim_x,28,494
  dim_y,29,503
  num_dims30,512
} dim_t;31,523
typedef uint8_t pair_t[pair_t33,533
#define WORLD_X 35,568
#define WORLD_Y 36,599
#define W_ORIGIN_Y 37,630
#define W_ORIGIN_X 38,661
#define MAP_X 39,692
#define MAP_Y 40,722
#define MIN_TREES 41,752
#define MIN_BOULDERS 42,782
#define TREE_PROB 43,812
#define BOULDER_PROB 44,842
#define mappair(46,873
#define mapxy(47,930
#define heightpair(48,965
#define heightxy(49,1028
typedef enum __attribute__ ((__packed__)) terrain_type 51,1070
  ter_debug,52,1127
  ter_boulder,53,1140
  ter_tree,54,1155
  ter_path,55,1167
  ter_mart,56,1179
  ter_center,57,1191
  ter_grass,58,1205
  ter_clearing,59,1218
  ter_mountain,60,1234
  ter_forest61,1250
} terrain_type_t;62,1263
typedef struct map 64,1282
  terrain_type_t map[map65,1303
  uint8_t height[height66,1339
  uint8_t n,67,1371
  uint8_t n, s,67,1371
  uint8_t n, s, e,67,1371
  uint8_t n, s, e, w;67,1371
} map_t;68,1393
map_t *world[world70,1403
int world_x,71,1443
int world_x,world_y;71,1443
typedef struct queue_node 73,1465
  int x,74,1493
  int x, y;74,1493
  struct queue_node *next;next75,1505
} queue_node_t;76,1532
static int32_t path_cmp(78,1549
static int32_t edge_penalty(82,1672
static void dijkstra_path(87,1800
static int build_paths(185,5586
static int gaussian[gaussian206,5892
static int smooth_height(214,6055
static void find_building_location(371,10090
static int place_pokemart(402,11577
static int place_center(416,11869
static int map_terrain(429,12166
static int place_boulders(597,16415
static int place_trees(613,16711
static int new_map(629,16999
static void print_map(642,17259
static int go_to_map(687,18087
static int new_world(722,19130
int main(732,19531
